function reconstruct_tomo_wrapper(ts_dir,tomo_star,binning,threads,no_weight,ctf)
%This function will generate the tomograms using RELION 4 in a directory called tomograms
%Dynamo must be loaded in this terminal window for this function to work
%The function inputs are: reconstruct_tomo_wrapper(ts_dir,tomo_star,binning,threads,no_weight,ctf)
%e.g. reconstruct_tomo_wrapper('ts_directory','ImportTomo/job001/tomograms.star',8,16,'n','y')
%Where: 
%ts_dir = directory containing tilt series directories
%tomo_star = the path to the tomograms.star file generated by RELION in ImportTomo
%binning = the desired level of binning of the tomograms (IMOD convention)
%threads = the number of threads to assign to tomogram reconstruction. If you don't know, try random values e.g. 8,16,32, or just enter 1 if it is not working.
%no_weight = enter either 'y' or 'n' (yes/no). Yes tells RELION to use the no_weight flag. No does not use it. RELION devs describe using the no_weight flag as: reconstructing an unweighted tomogram, as opposed to applying a weighting in 3D using a Wiener filter. If the purpose of the tomogram is for a human to slice through it along the viewing direction, then an unweighted tomogram offers the most contrast. It will introduce streaking artifacts along the viewing direction, however.
%ctf = enter either 'y' or 'n' (yes/no). Yes tells RELION to apply CTF correction, no tells it not to. The latter is useful if importing into IsoNet etc. 
    
%%% List of already processed tilt-series
processed = {};

if nargin <= 5
    disp('Not enough input arguments') 
    disp('The function inputs are: reconstruct_tomo_wrapper(ts_dir,tomo_star,binning,threads,no_weight,ctf)')
    disp('Type: help reconstruct_tomo_wrapper; for more information'); 
    return
end

%Check RELION is loaded
command = ['relion_tomo_reconstruct_tomogram'];
    [status,cmdout] = system(command);
    
if contains(cmdout,'Command not found','IgnoreCase',true);
    disp('RELION not found. Have you remembered to load RELION in this terminal before opening MatLab?');
    return
end

while true
        
	[ts_directory, processed] = next_dir(ts_dir, processed);
        
        if ischar(ts_directory)
                autoalign_sleep(processed)
                continue
        end
    	
	current_ts = fullfile(ts_directory.folder, ts_directory.name);
	
	if contains(no_weight,'y') | contains(no_weight,'Y')
	    no_weight_str = '--no_weight';
	else
	    no_weight_str = '';
	end
	
	if contains(ctf,'y') | contains(ctf,'Y')
	    ctf_str = '';
	else
	    ctf_str = '--noctf';
	end
	
	if isnumeric(binning)
	    binning = num2str(binning);
	end
	
	if isnumeric(threads)
	    threads = num2str(threads);
	end
	
	disp('Please wait. Relion_tomo_reconstruct_tomograms takes a minute or two to display any information');
	
	command = ['relion_tomo_reconstruct_tomogram --t ' tomo_star ' --tn ' ts_directory.name ' ' no_weight_str ' ' ctf_str ' --bin ' binning ' --j ' threads ' --o tomograms/' ts_directory.name '.mrc'];
	system(command);  
	
end
end



